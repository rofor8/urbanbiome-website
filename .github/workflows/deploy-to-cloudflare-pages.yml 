# Name of your workflow, displayed in the GitHub Actions tab
name: Deploy UrbanBiome to Cloudflare Pages

# When this workflow will run
on:
  push:
    branches: [main] # Trigger on pushes to the 'main' branch
  pull_request:
    branches: [main] # Trigger on pull requests to the 'main' branch

# Define the jobs to be executed
jobs:
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Permissions granted to the GITHUB_TOKEN for this job
    # `contents: read` is needed for `actions/checkout`
    # `deployments: write` is needed by Cloudflare Pages to create deployments
    permissions:
      contents: read
      deployments: write

    # Steps in the deployment job
    steps:
      # Step 1: Checkout your repository code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Deploy to Cloudflare Pages using Wrangler action
      # The `.` in `pages deploy .` means "deploy the current directory"
      # which is where your index.html should be.
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3 # Use the official Cloudflare Wrangler action
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}    # Your Cloudflare API Token (from GitHub Secrets)
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }} # Your Cloudflare Account ID (from GitHub Secrets)
          projectName: urbanbiome-website                 # IMPORTANT: This MUST match the project name you created in Cloudflare Pages
          command: pages deploy .                           # Command to deploy the current directory (your static HTML file)
          # Note: No 'build' command needed for a single static HTML file.
          # Wrangler automatically picks up the content from the specified directory.